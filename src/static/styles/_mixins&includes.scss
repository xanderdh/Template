// sass-lint:disable-all
//----------------------------------------------------//
// Mixins & Includes                                  //
//----------------------------------------------------//
@mixin notext {
  overflow: hidden;
  text-indent: -9999px;
}

.clearfix::after {
  content: "";
  display: table;
  clear: both;
}

.centered {
  display: table;
  width: 100%;
  height: 100%;
  > * {
    display: table-cell;
    text-align: center;
    vertical-align: middle;
  }
}

// PLACEHOLDER MIXIN
@mixin placeholderColor($input-text-color) {
  &::-webkit-input-placeholder {
    color: $input-text-color;
  }
  &:-moz-placeholder {
    color: $input-text-color;
    opacity: 1;
  }
  &::-moz-placeholder {
    color: $input-text-color;
    opacity: 1;
  }
  &:-ms-input-placeholder {
    color: $input-text-color;
  }
  &:focus:-moz-placeholder {
    color: transparent;
    opacity: 1;
  }
  &:focus::-moz-placeholder {
    color: transparent;
    opacity: 1;
  }
  &:focus::-webkit-input-placeholder {
    color: transparent;
  }
  &:focus:-ms-input-placeholder {
    color: transparent;
  }
  &:focus::placeholder {
    color: transparent;
  }
}

@mixin clearfix {
  &:after {
    content: " ";
    display: block;
    clear: both;
  }
}

// Clear select without default button
@mixin clearSelect {
  -webkit-appearance: none;
  -moz-appearance: none;
  appearance: none;
  -webkit-border-radius: 0;
  -moz-border-radius: 0;
  border-radius: 0;
}

//elements get appended with "__" and the $name
@mixin e($name) {
  @at-root   #{&}__#{$name} {
    @content;
  }
}

//modifiers get appended with "--" and the $name
@mixin m($name) {
  @at-root   #{&}--#{$name} {
    @content;
  }
}

@mixin b($point) {
  @if $point == desktop {
    @media (max-width: 1366px) and (min-width: 1024px) {
      @content;
    }
  } @else if $point == tablet {
    @media (max-width: 991px) {
      @content;
    }
  } @else if $point == mobile {
    @media (max-width: 767px) {
      @content;
    }
  } @else {
    @media (max-width: $point + 'px') {
      @content;
    }
  }
}

@mixin before-img($width, $height) {
  content: '';
  display: block;
  position: absolute;
  width: $width;
  height: $height;
}

//----------------------------------------------------//
// REM FONT_SIZE WITH FALLBACK 												//
//----------------------------------------------------//
// USAGE:
// p {
//   @include font-size(14px)
// }

@function calculateRem($size) {
  $remSize: $size / 16px;
  @return $remSize * 1rem;
}

@mixin font-size($size) {
  font-size: $size;
  font-size: calculateRem($size);
}

@mixin font-face($font-family, $file-path, $weight: normal, $style: normal, $asset-pipeline: false) {
  @font-face {
    font-family: $font-family;
    font-weight: $weight;
    font-style: $style;

    @if $asset-pipeline == true {
      src: font-url('#{$file-path}.eot');
      src: font-url('#{$file-path}.eot?#iefix') format('embedded-opentype'),
      font-url('#{$file-path}.woff') format('woff'),
      font-url('#{$file-path}.ttf') format('truetype'),
      font-url('#{$file-path}.svg##{$font-family}') format('svg');
    } @else {
      src: url('#{$file-path}.eot');
      src: url('#{$file-path}.eot?#iefix') format('embedded-opentype'),
      url('#{$file-path}.woff') format('woff'),
      url('#{$file-path}.ttf') format('truetype'),
      url('#{$file-path}.svg##{$font-family}') format('svg');
    }
  }
}

%rlist {
  font-size: 0;
  letter-spacing: -5px;
  line-height: 0;
}

%ulist {
  font-size: $mainFontSize;
  line-height: $mainFontHeight;
  letter-spacing: normal;
}

@mixin center {
  position: absolute;
  top: 50%;
  left: 50%;
  transform: translate(-50%, -50%)
}

@mixin trs {
  transition: $trs;
}
